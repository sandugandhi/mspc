swagger: '2.0'
info:
  title: Authentication API
  description: |
    Implementation of [OAuth 2.0](https://tools.ietf.org/html/rfc6749  "Docs") with Client Credentials Grant type
  version: "1.0.0"
host: apistagingref.developer.vodafone.com
schemes:
  - https
basePath: /oauth2
produces:
  - application/json
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: application
    tokenUrl: /oauth2/token
    description: OAuth 2.0 with Client Credentials Grant type
  Basic:
    type: basic
paths:
  /token:
    post:
      summary: Request Access Token
      description: |
        Partner makes a request to the token endpoint by adding the
        following parameters described below
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: grant_type
          in: formData
          description: Value MUST be set to "client_credentials" as per RFC 6749
          required: true
          type: string
          enum:
            - client_credentials
        - name: client_id
          in: formData
          description: API Key of the developer app created on APIX Developer Portal
          required: true
          type: string
        - name: client_secret
          in: formData
          description: API Secret of the developer app created on APIX Developer Portal
          required: true
          type: string
        - name: scope
          in: formData
          description: The scope(s) of the access request as described by RFC 6749 (Section 3.3)
          required: false
          type: string
          examples: MSPC_ALL

      tags:
        - Oauth2
      responses:
        200:
          description: Authorisation token (Bearer)
          schema:
              $ref: '#/definitions/Token'
          examples:
            application/json: |-
              {
                 "access_token":"2YotnFZFEjr1zCsicMWpAA",
                 "token_type":"Bearer",
                 "expires_in":3600,
               }
        400:
          description: As per RFC authorisation server responds with 400 in case of error
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json: |-
              {
                "error":"invalid_request"
              }
      security:
        - Basic: []
    delete:
      summary: Invalidate access token
      tags:
        - Oauth2
      responses:
        200:
          description: Empty body with 200 code
        403:
          description: Access Token already invalidated or not found
        500:
          description: Internal server error
      security:
        - OAuth2: []
definitions:
  Token:
    type: object
    properties:
      access_token:
        type: string
        description: The access token value
      token_type:
        type: string
        enum:
          - Bearer
        description: Type of the token is set to "Bearer"
      expires_in:
        type: integer
        format: int32
        description: The lifetime in seconds of the access token
  Error:
    type: object
    properties:
      error:
        type: string
        enum:
          - invalid_request
          - invalid_client
          - invalid_grant
          - unauthorized_client
          - unsupported_grant_type
      error_description:
        type: string
        description: Human-readable text providing additional information
      error_uri:
        type: string
        description: A URI identifying a human-readable web page with information about the error